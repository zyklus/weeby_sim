'use strict';

var      _fs = require( 'fs' )
  ,     path = require( 'path' )
  ,       fs = {}

  ,     jade = require( 'jade' )
  , thunkify = require( 'thunkify' )

  ,    views = path.join( __dirname, '..', '..', 'frontend', 'jade' ).toLowerCase()

  ,    cache = {}
  ,      dev = true
  ;

[ 'readFile', 'stat' ].forEach( function( nm ){
	fs[ nm ] = thunkify( _fs[ nm ] );
} );

function exists( path ){
	return function( cb ){
		_fs.exists( path, function( val ){ cb( null, val ); } );
	}
}

module.exports = function( app ){
	app.use( function *( next ){
		if( this.path === '/' ){ this.path = '/index'; }

		var filePath = path.normalize( path.join( views, this.path + '.jade' ) )
		  , stats, fnStr, fileData
		  ;

		if( !dev && cache[ filePath ] ){
			this.body = cache[ filePath ]( {} );

			return;
		}

  		// don't allow serving files outside of the views folder
		if( ( filePath.indexOf( views ) !== 0 ) ){ return; }

		if(
		       !( yield exists( filePath ) )                   // file doesn't exist
			|| !( stats = yield fs.stat( filePath ) ).isFile() // not a file (probably a directory)
		){
			return yield next;
		}

		this.body = ( cache[ filePath ] = jade.compile( fileData = yield fs.readFile( filePath ), {
			      filename : filePath
			,       pretty : !!dev
			, compileDebug : !!dev
		} ) )( {} );
	} );
};